openapi: 3.0.3
info:
  title: Wallet - Swagger OpenAPI 3.0
  description: |-
    This is a GoIT group project by Swagger OpenAPI 3.0
  version: 1.0.0
servers:
  - url: https://wallet-back-onrender.onrender.com/api/api
    description: web server
  - url: https://walletback-production.up.railway.app/api
    description: web server
  - url: http://localhost:4000/api
    description: local server
tags:
  - name: user
    description: Operations about user
  - name: transactions
    description: Everything about your transaction
  - name: categories
    description: Operations about categories


paths:

  /users/signup:
    post:
      tags:
        - user
      summary: Register user into the system
      description: Register user without verify and send him email for verify
      operationId: registerUser
      requestBody:
        description: Registration
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: dmytro01@mail.com
                name:
                  type: string
                  example: Dmytro
                password:
                  type: string
                  format: password
                  example: 12341234dD
              required:
                - email
                - name
                - password
      responses:
        '201':
          description: successful operation, user added
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 63ae03618abaf4e28f8b6de0
                      email:
                        type: string
                        example: dmytro01@mail.com
                      name:
                        type: string
                        example: Dmytro
                  message:
                    type: string
                    example: "User by id: ${user._id} has been created"
        '409':
          description: "Email has been used"

  /users/signin:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      requestBody:
        description: Authorization
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: dmytro01@mail.com
                password:
                  type: string
                  format: password
                  example: 12341234dD
              required:
                - email
                - password
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Dmytro"
                      email:
                        type: string
                        example: dmytro01@mail.com
                      balance:
                        type: number
                        example: 0,
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYTc1MzFmNzE2NTUzMDNiMDRlNzlmNSIsImlhdCI6MTY3MjM0OTI1NCwiZXhwIjoxNjcyMzUyODU0fQ.Je08KoEnthe8OYMKlhVN7KXix-Qzz5bDC3hPOjKqf2I
                  message:
                    type: string
                    example: "User by id: 63a7531f71655303b04e79f5 has been authorized"
        '401':
          description: Email or password or verification is wrong

  /users/signout:
    post:
      tags:
        - user
      summary: Logout user
      description: ''
      operationId: logoutUser
      responses:
        '204':
          description: successful operation
        '401':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Not authorized"
      security:
        - BearerAuth: [ ]

  /users/current:
    get:
      tags:
        - user
      summary: Get user information by token
      description: ''
      operationId: getUserInformationByToken
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        example: 63d5655cfbdc957b26ccedfa
                      id:
                        type: string
                        example: dmytro01@mail.com
                      name:
                        type: string
                        example: Dmytro
                      balance:
                        type: number
                        example: 0
      security:
        - BearerAuth: [ ]

  /transactions/pagination:
    get:
      tags:
        - transactions
      summary: Return all pagination transitions
      description: Return all pagination transitions by authorized User
      operationId: getAllPaginationTransitions
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/getAllPaginationTransitions'
        '401':
          $ref: '#/components/responses/401'
      security:
        - BearerAuth: []

  /transactions:

    get:
      tags:
        - transactions
      summary: Return all transitions
      description: Return all transitions by authorized User
      operationId: getAllTransitions
      responses:
        '200':
          $ref: '#/components/responses/getAllTransitions'
        '401':
          $ref: '#/components/responses/401'
      security:
        - BearerAuth: []

    post:
      tags:
        - transactions
      summary: Add new transaction
      description: Add new contact by authorized User
      operationId: addItemTransitions
      requestBody:

        description: The transaction to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/RequestBodyTransaction'
      responses:
        '201':
          description: Successful operation, return new Transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: number
                    example: 201
                  data:
                    type: object
                    properties:
                      result:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 63d7f1e937cad57fb8bc8609
                          date:
                            type: string
                            example: '2021-02-28T00:00:00.000Z'
                          type:
                            type: boolean
                            example: true
                          category:
                            type: string
                            description: category ID
                            example: 63d2548b350d2f7f3413914b
                          comment:
                            type: string
                            example: Nick comment expensive
                          sum:
                            type: integer
                            example: 16
                          balanceAfter:
                            type: integer
                            example: 48
                          owner:
                            type: string
                            description: user ID
                            example: 63d5655cfbdc957b26ccedfa
                          createdAt:
                            type: string
                            format: date-time
                            example: '2023-01-30T16:35:53.478Z'
                          updatedAt:
                            type: string
                            format: date-time
                            example: '2023-01-30T16:35:53.577Z'
        '400':
          description: invalid request body
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/body400/date'
                  - $ref: '#/components/responses/body400/type'
                  - $ref: '#/components/responses/body400/category'
                  - $ref: '#/components/responses/body400/sum'
        '401':
          $ref: '#/components/responses/401'
      security:
        - BearerAuth: []

  /transactions/{transactionId}:
    delete:
      tags:
        - transactions
      summary: Delete transaction by ID
      description: Delete transaction by ID
      operationId: deleteItemTransitions
      parameters:
        - in: path
          name: transactionId
          schema:
            type: string
          required: true
          description: Transaction ID that to delete
      responses:
        '201':
          description: Successful operation, return deleted Transaction ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: number
                    example: 201
                  message:
                    type: string
                    example: transactionId has been deleted
        '401':
          $ref: '#/components/responses/401'
      security:
        - BearerAuth: []

  /transactions/statistic:
    get:
      tags:
        - transactions
      summary: Return transactions statistic of month
      description: Return transactions statistic of month
      operationId: getTransactionStatistic
      parameters:
        - $ref: '#/components/parameters/month'
        - $ref: '#/components/parameters/year'
      responses:
        '200':
          description: Successful operation, return transactions statistic of month.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/responses/ResponseTransactionsStatistic'
                      dateArr:
                        type: object
                        properties:
                          '2022':
                            type: array
                            items:
                              - type: boolean
                                example: true
                              - type: boolean
                                example: false
                              - type: boolean
                                example: true
                              - type: boolean
                                example: false
                              - type: boolean
                                example: true
                              - type: boolean
                                example: true
                              - type: boolean
                                example: true
                              - type: boolean
                                example: true
                              - type: boolean
                                example: true
                              - type: boolean
                                example: true
                          '2023':
                            type: array
                            items:
                              - type: boolean
                                example: true
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
                              - type: boolean
                                example: false
          # links:
          #   GetUserById:
          #     description: get user by id description
          #     operationId: getUser
        '401':
          $ref: '#/components/responses/401'
      security:
        - BearerAuth: []

  /categories:
    get:
      tags:
        - categories
      summary: Return all categories
      description: Return all categories
      operationId: getAllCategories
      responses:
        '200':
          description: Successful operation, return all categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: 63d2548b350d2f7f34139148
                            name:
                              type: string
                              example: Car
        '401':
          $ref: '#/components/responses/401'
      security:
        - BearerAuth: []


components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: 63a56a3008692c79628e64fa
        email:
          type: string
          example: dmytro01@mail.com
        name:
          type: string
          example: Dmytro
        password:
          type: string
          example: 12341234dF
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYTc1MzFmNzE2NTUzMDNiMDRlNzlmNSIsImlhdCI6MTY3MjIzOTkwNywiZXhwIjoxNjcyMjQzNTA3fQ.hJ6Ey-HYaCM6uvDinn1WXd9Q_ZQ8_UU3-VxypPGMYhc
        avatarURLType:
          type: string
          enum: [default, local, web]
          example: 'local'
        avatarURL:
          type: string
          example: avatars/default.png
        verify:
          type: boolean
          example: false
        verificationToken:
          type: string
          example: 9sJsOiz8VsLqiVsmvvRUa
      xml:
        name: user
    Transaction:
      type: object
      properties:
        _id:
          type: string
          example: 63d66c6390792a579a81e189
        date:
          type: string
          example: '2021-02-28T00:00:00.000Z'
        type:
          type: boolean
          example: false
        category:
          type: string
          example: 63d2548b350d2f7f3413914b
          description: category ID
        comment:
          type: string
          example: Any comment of owner
        owner:
          type: object
          properties:
            _id:
              type: string
              example: 63d5655cfbdc957b26ccedfa
            name:
              type: string
              example: Dmytro
      xml:
        name: transaction
    Category:
      type: object
      properties:
        _id:
          type: string
          example: 63d2548b350d2f7f34139147
        name:
          type: string
          example: Products
      xml:
        name: category
  parameters:
    page:
      in: query
      name: page
      required: false
      schema:
        type: integer
        minimum: 1
        example: 1
        default: 1
    limit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        example: 12
        default: 12
    month:
      in: query
      name: month
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 12
        example: 7
    year:
      in: query
      name: year
      required: true
      schema:
        type: integer
        minimum: 2000
        example: 2022
    RequestBodyTransaction:
      type: object
      properties:
        date:
          type: string
          format: date
          example: '2021-02-28'
          required: true
        type:
          type: boolean
          example: true
        category:
          type: string
          description: category ID
          example: 63d2548b350d2f7f3413914b
        comment:
          type: string
          example: Nick comment expensive
        sum:
          type: number
          example: 16
  responses:
    ResponseTransactionsStatistic:
      type: object
      properties:
        _id:
          type: string
          example: 63d321397ead9b3982dc06ff
        date:
          type: string
          format: date
          example: '2021-02-01'
        type:
          type: boolean
          example: true
        category:
          type: object
          properties:
            _id:
              type: string
              description: category ID
              example: 63d2548b350d2f7f3413914b
            name:
              type: string
              example: Products
        comment:
          type: string
          example: Nick comment expensive
        sum:
          type: number
          example: 16
        balanceAfter:
          type: number
          example: 315
        owner:
          type: string
          description: user ID
          example: 63d270489cda8444abf67637
    getAllTransitions:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: number
                    example: 200
                  transitions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 12
                  length:
                    type: number
                    example: 26
    getAllPaginationTransitions:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              transitions:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    body400:
      date:
        type: object
        properties:
          message:
            type: string
            example: "Body: \"date\" is required"
      type:
        type: object
        properties:
          message:
            type: string
            example: "Body: \"type\" is required"
      category:
        type: object
        properties:
          message:
            type: string
            example: "Body: \"category\" is required"
      sum:
        type: object
        properties:
          message:
            type: string
            example: "Body: \"sum\" is required"
    '401':
      description: invalid authorization
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not authorized"
    TransitionAdd:
      description: Add new contact
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Nick
              email:
                type: string
                example: mail.nick@mail.com
              phone:
                type: string
                example: 12341234
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
